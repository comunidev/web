---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import MainLayout from "../../layout/main.astro";
import comunidevBlogLogo from "../../images/logo-blog.svg";
import DiscordBanner from "../../components/DiscordBanner.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

const tagClasslist = (i) => ({
  "text-accent-yellow border-accent-yellow": i === 0,
  "text-accent-lime border-accent-lime": i === 1,
  "text-accent-cyan border-accent-cyan": i === 2,
  "text-accent-pink border-accent-pink": i === 3,
});
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{entry.data.title}</title>
  </head>
  <body>
    <div class="post">
      <div class="post-header">
        <div class="left-line"></div>
        <div class="left-sidebar-positioner">
          <div class="left-sidebar">
            <Image
              src={entry.data.image}
              alt={entry.data.title}
              class="featured-image"
            />
            <DiscordBanner />
          </div>
        </div>
        <Image src={comunidevBlogLogo} alt="blog-logo" class="mb-12 w-64" />
        <h1>
          {entry.data.title}
        </h1>
        <div class="tags">
          {
            entry.data.tags.map((tag, i) => (
              <div class="tag" class:list={tagClasslist(i)}>
                {tag}
              </div>
            ))
          }
          <span class="author"><mx-2>|</mx-2> por {entry.data.author}</span>
        </div>
        <div class="intro">
          {entry.data.intro}
        </div>
      </div>
      <div class="content">
        <Content />
      </div>
    </div>

    <style>
      body {
        --uno: bg-brand-bg flex justify-end xxl: mr-42;
      }

      h1 {
        --uno: text-brand-primary text-6xl mb-6 drop-shadow
          drop-shadow-color-brand-primary drop-shadow-color-op-20 drop-shadow-lg;
      }

      .left-sidebar-positioner {
        --uno: absolute left-0 h-full w-full;
      }
      .left-sidebar {
        --uno: absolute h-full w-full flex flex-col items-end left-[-110%];
      }

      .featured-image {
        --uno: border-brand-primary border-2 max-h-md mb-24;
      }

      .post-header::before {
        content: " ";
        --uno: absolute top-0 -left-48 w-1 border-l-brand-primary h-full border-l-2;
      }

      .post-header::after {
        content: " ";
        --uno: absolute top-0 right-0 w-1 border-r-brand-primary h-90%
          border-r-2;
      }

      .post {
        --uno: w-6xl pl-36 flex flex-col items-start relative;
      }

      .post-header {
        --uno: w-4xl pr-16 relative pb-24 pt-12;

        & .intro {
          --uno: text-white pl-8 pr-32 leading-8 italic font-400;
        }

        & .tags {
          --uno: flex flex-row gap-2 mb-10;
          & .tag {
            --uno: text-sm inline-block pt-0.5 py-1 px-2 border;
          }
        }
      }

      .content {
        --uno: w-3xl -ml-6 relative pb-24 -mt-16 leading-8;
      }

      .author {
        --uno: text-white italic text-sm;
      }
    </style>
    <style is:global>
      .content {
        & h2 {
          --uno: text-4xl text-brand-secondary font-400 mb-4 mt-8
            drop-shadow-(color-brand-secondary color-op-10 lg);
        }

        & .astro-code {
          --uno: text-sm p-8;
        }

        & p {
          --uno: text-white mb-8 mt-4;
        }

        & strong {
          --uno: text-brand-primary;
        }
      }
    </style>
  </body>
</html>
