---
import { Image } from "astro:assets";
import { css } from "../../styled-system/css";
import DiscordBanner from "../components/DiscordBanner.astro";
import logoWeb from "../images/logo-web.svg";
import { getCollection } from "astro:content";

const posts = await getCollection(
  "blog",
  (post) => import.meta.env.DEV || post.data.draft === false
).then((posts) => posts.slice(0, 5));

const tagClasslist = (i) => ({
  [css({
    color: "brand-primary",
    borderColor: "brand-primary",
  })]: i === 0,
  [css({
    color: "accent-lime",
    borderColor: "accent-lime",
  })]: i === 1,
  [css({
    color: "accent-cyan",
    borderColor: "accent-cyan",
  })]: i === 2,
  [css({
    color: "accent-pink",
    borderColor: "accent-pink",
  })]: i === 3,
});

const styles = {
  body: css({
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    bg: "brand-bg",
  }),
  mainContainer: css({
    width: "5xl",
    display: "flex",
    flexDirection: "row",
    minH: "100vh",
    gap: "10",
  }),
  column1: css({
    minH: "full",
  }),
  logoWeb: css({
    w: "64",
    mb: "10",
    pt: "10",
  }),
  column2: css({
    flex: "1",
    minH: "full",
  }),
  h2: css({
    pt: "12",
    mb: "8",
    fontSize: "3xl",
    fontWeight: "600",
    color: "white",
  }),
  postList: css({
    display: "flex",
    flexDirection: "column",
    gap: "8",
  }),
  postCard: css({
    display: "flex",
    flexDirection: "row",
    flexWrap: "nowrap",
    gap: "5",
  }),
  thumbnailContainer: css({
    flex: "0 0 auto",
  }),
  postThumbnail: css({
    border: "2px solid",
    borderColor: "brand-primary",
  }),
  postInfo: css({}),
  postTitle: css({
    color: "brand-primary",
    fontSize: "3xl",
    lineHeight: "tight",
    mb: "4",
  }),
  tags: css({
    display: "flex",
    flexDirection: "row",
    alignItems: "center",
    gap: "2",
    mb: "3",
    flexWrap: "wrap",
  }),
  tag: css({
    fontSize: "sm",
    display: "inline-block",
    borderStyle: "solid",
    borderWidth: "1px",
    pt: "0.5",
    py: "1",
    px: "2",
  }),
  author: css({
    w: "100%",
    flex: "1 1",
    color: "white",
    fontStyle: "italic",
    fontSize: "sm",
    whiteSpace: "nowrap",
  }),
  postIntro: css({
    color: "neutral.200",
    fontStyle: "italic",
    maxWidth: "150ch",
    overflow: "hidden",
    textOverflow: "ellipsis",
    display: "-webkit-box",
    lineClamp: 3,
    boxOrient: "vertical",
  }),
};
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Document</title>
  </head>
  <body class={styles.body}>
    <div class={styles.mainContainer}>
      <div class={styles.column1}>
        <Image src={logoWeb} alt="logo" class={styles.logoWeb} />
        <DiscordBanner />
      </div>
      <div class={styles.column2}>
        <h2 class={styles.h2}>blog</h2>
        <div class={styles.postList}>
          {
            posts.map((post) => (
              <div class={styles.postCard}>
                <div class={styles.thumbnailContainer}>
                  <a href={`${post.collection}/${post.slug}`}>
                    <Image
                      class={styles.postThumbnail}
                      src={post.data.image}
                      alt={post.data.title}
                      width={150}
                    />
                  </a>
                </div>
                <div class={styles.postInfo}>
                  <a href={`${post.collection}/${post.slug}`}>
                    <h2 class={styles.postTitle}>{post.data.title}</h2>
                  </a>
                  <div class={styles.tags}>
                    {post.data.tags.map((tag, i) => (
                      <div class:list={[styles.tag, tagClasslist(i)]}>
                        {tag}
                      </div>
                    ))}
                    <span class={styles.author}>
                      <span class={css({ ml: "1", mr: "3" })}>|</span>por{" "}
                      {post.data.author}
                    </span>
                  </div>
                  <p class={styles.postIntro}>{post.data.intro}</p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </body>
</html>
